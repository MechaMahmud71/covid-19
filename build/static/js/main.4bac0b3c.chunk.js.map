{"version":3,"sources":["card.js","chart.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","componentDidMount","a","axios","get","result","data","console","log","globalData","getData","then","setState","confirmed","value","recovered","deaths","state","externalData","s","date","Date","currentDayNumber","getDay","dayName","charAt","toUpperCase","slice","year","getFullYear","dayNumber","getDate","month","getMonth","className","this","Component","ChartData","dailyData","fetchData","newData","map","el","totalConfirmed","newLables","reportDate","newArry","push","name","options","xaxis","categories","type","series","actualData","country","chart","id","width","App","changeCountry","e","target","fetchCountryData","resp","arr","newSeries","catch","dataLabels","colors","onChange","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4bac0b3c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./card.css\";\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            confirmed: 0,\r\n            recovered: 0,\r\n            deaths: 0,\r\n            externalData: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        async function getData() {\r\n            try {\r\n                const result = await axios.get(`https://covid19.mathdro.id/api`);\r\n                const data = await result.data;\r\n                //console.log(data);\r\n                return data;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        let globalData;\r\n\r\n        getData().then(data => {\r\n            globalData = data;\r\n            this.setState({\r\n                confirmed: globalData.confirmed.value,\r\n                recovered: globalData.recovered.value,\r\n                deaths: globalData.deaths.value\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const calanderDays = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n\r\n        const date = new Date();\r\n        let currentDayNumber = date.getDay();\r\n        let currentday = calanderDays[currentDayNumber];\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n\r\n\r\n        const capitalize = (s) => {\r\n            if (typeof s !== 'string') return ''\r\n            return s.charAt(0).toUpperCase() + s.slice(1)\r\n        }\r\n\r\n        const dayName = capitalize(currentday);\r\n        const year = date.getFullYear();\r\n        const dayNumber = date.getDate();\r\n        const month = months[date.getMonth()];\r\n\r\n        console.log(month);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"card-container\">\r\n                <div className=\"subContainer infected-container\">\r\n                    <p className=\"header infetcted-header\">Infected</p>\r\n                    {\r\n                        this.props.externalData ? <p className=\"value infected-value\">{this.state.confirmed}</p> : <p className=\"value infected-value\">{this.props.confirmed}</p>\r\n                    }\r\n\r\n                    <p className=\"date infected-date\">{dayName},{dayNumber} {month} {year} </p>\r\n                    <p className=\"description infected-decription\">\r\n                        Number of Active cases of COVID-19\r\n          </p>\r\n                </div>\r\n                <div className=\"subContainer recovered-container\">\r\n                    <p className=\"header recovered-header\">Recovered</p>\r\n                    {\r\n                        this.props.externalData ? <p className=\"value recovered-value\">{this.state.recovered}</p> : <p className=\"value recovered-value\">{this.props.recovered}</p>\r\n                    }\r\n                    <p className=\"date recovered\">{dayName},{dayNumber} {month} {year}</p>\r\n                    <p className=\"description recovered-decription\">\r\n                        Number of Recoverd cases of COVID-19\r\n          </p>\r\n                </div>\r\n                <div className=\"subContainer deaths-container\">\r\n                    <p className=\"header deaths-header\">Deaths</p>\r\n                    {\r\n                        this.props.externalData ? <p className=\"value deaths-value\">{this.state.deaths}</p> : <p className=\"value deaths-value\">{this.props.deaths}</p>\r\n                    }\r\n                    <p className=\"date deaths-date\">{dayName},{dayNumber} {month} {year}</p>\r\n                    <p className=\"description deaths-decription\">\r\n                        Number of Death cases of COVID-19\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./chart.css\";\r\n\r\nclass ChartData extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            country: \"Global\",\r\n            actualData: [],\r\n            options: {\r\n                chart: {\r\n                    id: \"basic-bar\"\r\n                },\r\n                xaxis: {\r\n                    categories: []\r\n                },\r\n\r\n\r\n\r\n            },\r\n\r\n\r\n\r\n            series: [\r\n                {\r\n                    name: \"series-1\",\r\n                    data: []\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        async function fetchData() {\r\n            try {\r\n                const result = await axios.get(`https://covid19.mathdro.id/api/daily`);\r\n                const data = await result.data;\r\n\r\n                //console.log(data);\r\n                return data;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        let dailyData;\r\n\r\n        fetchData().then(data => {\r\n            dailyData = data;\r\n            const newData = dailyData.map(el => el.totalConfirmed);\r\n            const newLables = dailyData.map(el => el.reportDate);\r\n            const newArry = [];\r\n\r\n            newArry.push({ data: newData, name: \"Infected\" });\r\n            this.setState({\r\n                options: {\r\n                    ...this.state.options,\r\n                    xaxis: {\r\n                        categories: newLables\r\n                    }\r\n                },\r\n                type: \"line\",\r\n\r\n                series: newArry,\r\n                actualData: newData\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props.options);\r\n        console.log(this.props.state);\r\n        return (\r\n            <div className=\"chart-container\">\r\n                {\r\n                    this.props.externalData ? (\r\n                        <Chart\r\n                            options={this.state.options}\r\n                            series={this.state.series}\r\n                            type=\"area\"\r\n                            width=\"950\"\r\n                        />\r\n                    ) : (\r\n                            <Chart\r\n                                options={this.props.options}\r\n                                series={this.props.series}\r\n                                type=\"bar\"\r\n                                width=\"900\"\r\n                            />\r\n                        )\r\n                }\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChartData;\r\n","import React, { Component } from \"react\";\nimport Card from \"./card\";\nimport axios from \"axios\";\n\nimport ChartData from \"./chart\";\nimport \"./style.css\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      country: \"global\",\n      confirmed: 0,\n      recovered: 0,\n      deaths: 0,\n      externalData: true,\n      options: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        xaxis: {\n          categories: []\n        },\n\n        dataLabels: {\n          colors: \"rgba(0, 0, 255, 0.5)\"\n        }\n      }\n    }\n  }\n\n\n\n  changeCountry = (e) => {\n    this.setState({\n      country: e.target.value\n    })\n  }\n\n\n\n  fetchCountryData = () => {\n\n    if (this.state.country === \"global\") {\n      axios\n        .get(`https://covid19.mathdro.id/api`)\n        .then(resp => {\n          const arr = [];\n          const newSeries = [];\n          arr.push(resp.data.confirmed.value);\n          arr.push(resp.data.recovered.value);\n          arr.push(resp.data.deaths.value);\n          console.log(arr)\n          newSeries.push({ data: arr, name: \"series-2\" });\n\n          this.setState({\n            confirmed: resp.data.confirmed.value,\n            recovered: resp.data.recovered.value,\n            deaths: resp.data.deaths.value,\n            externalData: false,\n            options: {\n              ...this.state.options,\n              xaxis: {\n                categories: [\"Infected\", \"Recoverd\", \"Deaths\"]\n              }\n            },\n            series: newSeries\n\n          });\n        })\n        .catch(() => {\n          console.log(\"Error!\");\n        });\n    } else {\n      axios\n        .get(`https://covid19.mathdro.id/api/countries/${this.state.country}`)\n        .then(resp => {\n          const arr = [];\n          const newSeries = [];\n          arr.push(resp.data.confirmed.value);\n          arr.push(resp.data.recovered.value);\n          arr.push(resp.data.deaths.value);\n\n          console.log(arr)\n\n          newSeries.push({ data: arr, name: \"series-2\" });\n\n          this.setState({\n            confirmed: resp.data.confirmed.value,\n            recovered: resp.data.recovered.value,\n            deaths: resp.data.deaths.value,\n            externalData: false,\n            options: {\n              ...this.state.options,\n              xaxis: {\n                categories: [\"Infected\", \"Recoverd\", \"Deaths\"]\n              }\n            },\n            series: newSeries\n\n          });\n        })\n        .catch(() => {\n          console.log(\"error\");\n        });\n    }\n\n  }\n\n  render() {\n\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <h1>COVID-19</h1>\n          <div className=\"select-container\">\n            <select value={this.state.value} onChange={this.changeCountry}>\n              <option value=\"\">Select A Country</option>\n              <option value=\"global\">Global</option>\n              <option value=\"Afghanistan\">Afghanistan</option>\n              <option value=\"Åland Islands\">Åland Islands</option>\n              <option value=\"Albania\">Albania</option>\n              <option value=\"Algeria\">Algeria</option>\n              <option value=\"American Samoa\">American Samoa</option>\n              <option value=\"Andorra\">Andorra</option>\n              <option value=\"Angola\">Angola</option>\n              <option value=\"Anguilla\">Anguilla</option>\n              <option value=\"Antarctica\">Antarctica</option>\n              <option value=\"Antigua and Barbuda\">Antigua and Barbuda</option>\n              <option value=\"Argentina\">Argentina</option>\n              <option value=\"Armenia\">Armenia</option>\n              <option value=\"Aruba\">Aruba</option>\n              <option value=\"Australia\">Australia</option>\n              <option value=\"Austria\">Austria</option>\n              <option value=\"Azerbaijan\">Azerbaijan</option>\n              <option value=\"Bahamas\">Bahamas</option>\n              <option value=\"Bahrain\">Bahrain</option>\n              <option value=\"Bangladesh\">Bangladesh</option>\n              <option value=\"Barbados\">Barbados</option>\n              <option value=\"Belarus\">Belarus</option>\n              <option value=\"Belgium\">Belgium</option>\n              <option value=\"Belize\">Belize</option>\n              <option value=\"Benin\">Benin</option>\n              <option value=\"Bermuda\">Bermuda</option>\n              <option value=\"Bhutan\">Bhutan</option>\n              <option value=\"Bolivia\">Bolivia</option>\n              <option value=\"Bosnia and Herzegovina\">\n                Bosnia and Herzegovina\n              </option>\n              <option value=\"Botswana\">Botswana</option>\n              <option value=\"Bouvet Island\">Bouvet Island</option>\n              <option value=\"Brazil\">Brazil</option>\n              <option value=\"British Indian Ocean Territory\">\n                British Indian Ocean Territory\n              </option>\n              <option value=\"Brunei Darussalam\">Brunei Darussalam</option>\n              <option value=\"Bulgaria\">Bulgaria</option>\n              <option value=\"Burkina Faso\">Burkina Faso</option>\n              <option value=\"Burundi\">Burundi</option>\n              <option value=\"Cambodia\">Cambodia</option>\n              <option value=\"Cameroon\">Cameroon</option>\n              <option value=\"Canada\">Canada</option>\n              <option value=\"Cape Verde\">Cape Verde</option>\n              <option value=\"Cayman Islands\">Cayman Islands</option>\n              <option value=\"Central African Republic\">\n                Central African Republic\n              </option>\n              <option value=\"Chad\">Chad</option>\n              <option value=\"Chile\">Chile</option>\n              <option value=\"China\">China</option>\n              <option value=\"Christmas Island\">Christmas Island</option>\n              <option value=\"Cocos (Keeling) Islands\">\n                Cocos (Keeling) Islands\n              </option>\n              <option value=\"Colombia\">Colombia</option>\n              <option value=\"Comoros\">Comoros</option>\n              <option value=\"Congo\">Congo</option>\n              <option value=\"Congo, The Democratic Republic of The\">\n                Congo, The Democratic Republic of The\n              </option>\n              <option value=\"Cook Islands\">Cook Islands</option>\n              <option value=\"Costa Rica\">Costa Rica</option>\n              <option value=\"Cote D'ivoire\">Cote D'ivoire</option>\n              <option value=\"Croatia\">Croatia</option>\n              <option value=\"Cuba\">Cuba</option>\n              <option value=\"Cyprus\">Cyprus</option>\n              <option value=\"Czech Republic\">Czech Republic</option>\n              <option value=\"Denmark\">Denmark</option>\n              <option value=\"Djibouti\">Djibouti</option>\n              <option value=\"Dominica\">Dominica</option>\n              <option value=\"Dominican Republic\">Dominican Republic</option>\n              <option value=\"Ecuador\">Ecuador</option>\n              <option value=\"Egypt\">Egypt</option>\n              <option value=\"El Salvador\">El Salvador</option>\n              <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\n              <option value=\"Eritrea\">Eritrea</option>\n              <option value=\"Estonia\">Estonia</option>\n              <option value=\"Ethiopia\">Ethiopia</option>\n              <option value=\"Falkland\">\n                Falkland Islands (Malvinas)\n              </option>\n              <option value=\"Faroe Islands\">Faroe Islands</option>\n              <option value=\"Fiji\">Fiji</option>\n              <option value=\"Finland\">Finland</option>\n              <option value=\"France\">France</option>\n              <option value=\"French Guiana\">French Guiana</option>\n              <option value=\"French Polynesia\">French Polynesia</option>\n              <option value=\"French Southern Territories\">\n                French Southern Territories\n              </option>\n              <option value=\"Gabon\">Gabon</option>\n              <option value=\"Gambia\">Gambia</option>\n              <option value=\"Georgia\">Georgia</option>\n              <option value=\"Germany\">Germany</option>\n              <option value=\"Ghana\">Ghana</option>\n              <option value=\"Gibraltar\">Gibraltar</option>\n              <option value=\"Greece\">Greece</option>\n              <option value=\"Greenland\">Greenland</option>\n              <option value=\"Grenada\">Grenada</option>\n              <option value=\"Guadeloupe\">Guadeloupe</option>\n              <option value=\"Guam\">Guam</option>\n              <option value=\"Guatemala\">Guatemala</option>\n              <option value=\"Guernsey\">Guernsey</option>\n              <option value=\"Guinea\">Guinea</option>\n              <option value=\"Guinea-bissau\">Guinea-bissau</option>\n              <option value=\"Guyana\">Guyana</option>\n              <option value=\"Haiti\">Haiti</option>\n              <option value=\"Heard Island and Mcdonald Islands\">\n                Heard Island and Mcdonald Islands\n              </option>\n              <option value=\"Holy See (Vatican City State)\">\n                Holy See (Vatican City State)\n              </option>\n              <option value=\"Honduras\">Honduras</option>\n              <option value=\"Hong Kong\">Hong Kong</option>\n              <option value=\"Hungary\">Hungary</option>\n              <option value=\"Iceland\">Iceland</option>\n              <option value=\"India\">India</option>\n              <option value=\"Indonesia\">Indonesia</option>\n              <option value=\"Iran\">\n                Iran, Islamic Republic of\n              </option>\n              <option value=\"Iraq\">Iraq</option>\n              <option value=\"Ireland\">Ireland</option>\n              <option value=\"Isle of Man\">Isle of Man</option>\n              <option value=\"Israel\">Israel</option>\n              <option value=\"Italy\">Italy</option>\n              <option value=\"Jamaica\">Jamaica</option>\n              <option value=\"Japan\">Japan</option>\n              <option value=\"Jersey\">Jersey</option>\n              <option value=\"Jordan\">Jordan</option>\n              <option value=\"Kazakhstan\">Kazakhstan</option>\n              <option value=\"Kenya\">Kenya</option>\n              <option value=\"Kiribati\">Kiribati</option>\n              <option value=\"Korea, Democratic People's Republic of\">\n                Korea, Democratic People's Republic of\n              </option>\n              <option value=\"Korea, Republic of\">Korea, Republic of</option>\n              <option value=\"Kuwait\">Kuwait</option>\n              <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n              <option value=\"Lao People's Democratic Republic\">\n                Lao People's Democratic Republic\n              </option>\n              <option value=\"Latvia\">Latvia</option>\n              <option value=\"Lebanon\">Lebanon</option>\n              <option value=\"Lesotho\">Lesotho</option>\n              <option value=\"Liberia\">Liberia</option>\n              <option value=\"Libyan Arab Jamahiriya\">\n                Libyan Arab Jamahiriya\n              </option>\n              <option value=\"Liechtenstein\">Liechtenstein</option>\n              <option value=\"Lithuania\">Lithuania</option>\n              <option value=\"Luxembourg\">Luxembourg</option>\n              <option value=\"Macao\">Macao</option>\n              <option value=\"Macedonia, The Former Yugoslav Republic of\">\n                Macedonia, The Former Yugoslav Republic of\n              </option>\n              <option value=\"Madagascar\">Madagascar</option>\n              <option value=\"Malawi\">Malawi</option>\n              <option value=\"Malaysia\">Malaysia</option>\n              <option value=\"Maldives\">Maldives</option>\n              <option value=\"Mali\">Mali</option>\n              <option value=\"Malta\">Malta</option>\n              <option value=\"Marshall Islands\">Marshall Islands</option>\n              <option value=\"Martinique\">Martinique</option>\n              <option value=\"Mauritania\">Mauritania</option>\n              <option value=\"Mauritius\">Mauritius</option>\n              <option value=\"Mayotte\">Mayotte</option>\n              <option value=\"Mexico\">Mexico</option>\n              <option value=\"Micronesia, Federated States of\">\n                Micronesia, Federated States of\n              </option>\n              <option value=\"Moldova, Republic of\">Moldova, Republic of</option>\n              <option value=\"Monaco\">Monaco</option>\n              <option value=\"Mongolia\">Mongolia</option>\n              <option value=\"Montenegro\">Montenegro</option>\n              <option value=\"Montserrat\">Montserrat</option>\n              <option value=\"Morocco\">Morocco</option>\n              <option value=\"Mozambique\">Mozambique</option>\n              <option value=\"Myanmar\">Myanmar</option>\n              <option value=\"Namibia\">Namibia</option>\n              <option value=\"Nauru\">Nauru</option>\n              <option value=\"Nepal\">Nepal</option>\n              <option value=\"Netherlands\">Netherlands</option>\n              <option value=\"Netherlands Antilles\">Netherlands Antilles</option>\n              <option value=\"New Caledonia\">New Caledonia</option>\n              <option value=\"New Zealand\">New Zealand</option>\n              <option value=\"Nicaragua\">Nicaragua</option>\n              <option value=\"Niger\">Niger</option>\n              <option value=\"Nigeria\">Nigeria</option>\n              <option value=\"Niue\">Niue</option>\n              <option value=\"Norfolk Island\">Norfolk Island</option>\n              <option value=\"Northern Mariana Islands\">\n                Northern Mariana Islands\n              </option>\n              <option value=\"Norway\">Norway</option>\n              <option value=\"Oman\">Oman</option>\n              <option value=\"Pakistan\">Pakistan</option>\n              <option value=\"Palau\">Palau</option>\n              <option value=\"Palestinian Territory, Occupied\">\n                Palestinian Territory, Occupied\n              </option>\n              <option value=\"Panama\">Panama</option>\n              <option value=\"Papua New Guinea\">Papua New Guinea</option>\n              <option value=\"Paraguay\">Paraguay</option>\n              <option value=\"Peru\">Peru</option>\n              <option value=\"Philippines\">Philippines</option>\n              <option value=\"Pitcairn\">Pitcairn</option>\n              <option value=\"Poland\">Poland</option>\n              <option value=\"Portugal\">Portugal</option>\n              <option value=\"Puerto Rico\">Puerto Rico</option>\n              <option value=\"Qatar\">Qatar</option>\n              <option value=\"Reunion\">Reunion</option>\n              <option value=\"Romania\">Romania</option>\n              <option value=\"Russian Federation\">Russian Federation</option>\n              <option value=\"Rwanda\">Rwanda</option>\n              <option value=\"Saint Helena\">Saint Helena</option>\n              <option value=\"Saint Kitts and Nevis\">\n                Saint Kitts and Nevis\n              </option>\n              <option value=\"Saint Lucia\">Saint Lucia</option>\n              <option value=\"Saint Pierre and Miquelon\">\n                Saint Pierre and Miquelon\n              </option>\n              <option value=\"Saint Vincent and The Grenadines\">\n                Saint Vincent and The Grenadines\n              </option>\n              <option value=\"Samoa\">Samoa</option>\n              <option value=\"San Marino\">San Marino</option>\n              <option value=\"Sao Tome and Principe\">\n                Sao Tome and Principe\n              </option>\n              <option value=\"Saudi Arabia\">Saudi Arabia</option>\n              <option value=\"Senegal\">Senegal</option>\n              <option value=\"Serbia\">Serbia</option>\n              <option value=\"Seychelles\">Seychelles</option>\n              <option value=\"Sierra Leone\">Sierra Leone</option>\n              <option value=\"Singapore\">Singapore</option>\n              <option value=\"Slovakia\">Slovakia</option>\n              <option value=\"Slovenia\">Slovenia</option>\n              <option value=\"Solomon Islands\">Solomon Islands</option>\n              <option value=\"Somalia\">Somalia</option>\n              <option value=\"South Africa\">South Africa</option>\n              <option value=\"South Georgia and The South Sandwich Islands\">\n                South Georgia and The South Sandwich Islands\n              </option>\n              <option value=\"Spain\">Spain</option>\n              <option value=\"Sri Lanka\">Sri Lanka</option>\n              <option value=\"Sudan\">Sudan</option>\n              <option value=\"Suriname\">Suriname</option>\n              <option value=\"Svalbard and Jan Mayen\">\n                Svalbard and Jan Mayen\n              </option>\n              <option value=\"Swaziland\">Swaziland</option>\n              <option value=\"Sweden\">Sweden</option>\n              <option value=\"Switzerland\">Switzerland</option>\n              <option value=\"Syrian Arab Republic\">Syrian Arab Republic</option>\n              <option value=\"Taiwan, Province of China\">\n                Taiwan, Province of China\n              </option>\n              <option value=\"Tajikistan\">Tajikistan</option>\n              <option value=\"Tanzania\">Tanzania</option>\n              <option value=\"Thailand\">Thailand</option>\n              <option value=\"Timor-leste\">Timor-leste</option>\n              <option value=\"Togo\">Togo</option>\n              <option value=\"Tokelau\">Tokelau</option>\n              <option value=\"Tonga\">Tonga</option>\n              <option value=\"Trinidad and Tobago\">Trinidad and Tobago</option>\n              <option value=\"Tunisia\">Tunisia</option>\n              <option value=\"Turkey\">Turkey</option>\n              <option value=\"Turkmenistan\">Turkmenistan</option>\n              <option value=\"Turks and Caicos Islands\">\n                Turks and Caicos Islands\n              </option>\n              <option value=\"Tuvalu\">Tuvalu</option>\n              <option value=\"Uganda\">Uganda</option>\n              <option value=\"Ukraine\">Ukraine</option>\n              <option value=\"United Arab Emirates\">United Arab Emirates</option>\n              <option value=\"United Kingdom\">United Kingdom</option>\n              <option value=\"USA\">United States</option>\n              <option value=\"United States Minor Outlying Islands\">\n                United States Minor Outlying Islands\n              </option>\n              <option value=\"Uruguay\">Uruguay</option>\n              <option value=\"Uzbekistan\">Uzbekistan</option>\n              <option value=\"Vanuatu\">Vanuatu</option>\n              <option value=\"Venezuela\">Venezuela</option>\n              <option value=\"Viet Nam\">Viet Nam</option>\n              <option value=\"Virgin Islands, British\">\n                Virgin Islands, British\n              </option>\n              <option value=\"Virgin Islands, U.S.\">Virgin Islands, U.S.</option>\n              <option value=\"Wallis and Futuna\">Wallis and Futuna</option>\n              <option value=\"Western Sahara\">Western Sahara</option>\n              <option value=\"Yemen\">Yemen</option>\n              <option value=\"Zambia\">Zambia</option>\n              <option value=\"Zimbabwe\">Zimbabwe</option>\n            </select>\n            <button className=\"confirm-button\" onClick={this.fetchCountryData}>Confirm</button>\n          </div>\n\n          <Card confirmed={this.state.confirmed} recovered={this.state.recovered} deaths={this.state.deaths} externalData={this.state.externalData} />\n\n          <ChartData options={this.state.options} series={this.state.series} externalData={this.state.externalData} />\n        </div>\n      </div>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}